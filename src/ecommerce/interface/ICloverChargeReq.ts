import type { CloverEcomindEnum } from '../enum';
import type { ICloverStoredCredential } from './ICloverStoredCredential';
import type { ICloverTender } from './ICloverTender';

export interface ICloverChargeReq {
    /**
     * Charge amount in cents.
     * If the charge request includes a tax_amount, this value must be the sum of the items and any tax or tip.
     */
    amount: number;
    /* Three-letter ISO 4217 currency code (in lowercase) */
    currency: string;
    /**
     * An idempotency key is a required value generated by your app for Clover.
     * To safely retry /v1/charges requests without accidental double charges.
     * Must be a version 4 UUID or equivalent
     */
    idempotencyKey: string;
    /**
     * Specifies if the charge is to be captured immediately.
     * The default value is true.
     * If the value is set to false, the charge transaction type is AUTH (or PRE-AUTH).
     */
    capture?: boolean;
    /* Container for user-facing information about the object */
    description?: string;
    /**
     * Indicates whether the card data used for a charge was entered by the customer (ecom) or merchant (moto).
     * If no value is set, the default is ecom.
     * @see CloverEcomindEnum
     */
    ecomind?: CloverEcomindEnum;
    /**
     * An ID, such as an invoice or PO number, that is passed to the merchant's gateway and ultimately appears in settlement records.
     * Format supported for US, spaces in between are allowed and including spaces length max to be 12 including alphanumeric characters.
     */
    external_reference_id?: string;
    /* Email address which receives the charge receipt. */
    receipt_email?: string;
    /**
     * The payment source to be charged.
     * This can be a token. It can also be alternate_tender.
     */
    source: string;
    /**
     * Stored Credentials for a transaction.
     * @see ICloverStoredCredential
     */
    stored_credentials?: ICloverStoredCredential;
    /**
     * Amount paid in taxes.
     * This value is not automatically added to the total amount, so apps must ensure the value of the amount property is the correct final charge.
     */
    tax_amount?: number;
    /**
     * Amount paid in tips.
     * This value is automatically added to the total amount when the transaction is finalized.
     */
    tip_amount?: number;
    /**
     * Custom tender that can be used to make charge or pay for the order.
     * @see ICloverTender
     */
    tender?: Partial<ICloverTender>;
}
